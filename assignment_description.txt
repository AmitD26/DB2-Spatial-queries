Homework3: Spatial Queries
Please go through DB2 Spatial Tutorial (I (http://www.google.com/url?q=http%3A%2F%2Fwww.ibm.com%2Fdeveloperworks%2Fdata%2Ftutorials%2Fdm-1202db2spatialdata1%2Findex.html&sa=D&sntz=1&usg=AFQjCNFk5bII6k0SydFFu1x0s_8oSeXRFw), II (http://www.google.com/url?q=http%3A%2F%2Fwww.ibm.com%2Fdeveloperworks%2Fdata%2Ftutorials%2Fdm-1212db2spatialdata2%2Findex.html&sa=D&sntz=1&usg=AFQjCNFGQR-qX-dqhvQQSMTHxgfiI6Q6jA) ) before you begin this homework. 
Please also read spatial query examples.
DB2 Spatial Online Reference (V11.1) PDF Version (ftp://ftp.software.ibm.com/ps/products/db2/info/vr105/pdf/en_US/DB2Spatial-db2sbe1050.pdf)


In this homework, you will load two spatial datasets into a spatial database (DB2 Spatial Extender) and perform two queries.

The first dataset is from TIGER dataset provided by US Census Bureau. We will download the US counties in shapefile format.
Once you unzip the file, you can run the following command under db2 command line to find metadata for the format. (Documentation of the dataset can be found here (http://www.google.com/url?q=http%3A%2F%2Fwww2.census.gov%2Fgeo%2Fpdfs%2Fmaps-data%2Fdata%2Ftiger%2Ftgrshp2015%2FTGRSHP2015_TechDoc_Ch3.pdf&sa=D&sntz=1&usg=AFQjCNGdBbHvxj0fzhFRtLpAe1IG880sFg).)
db2se shape_info -fileName tl_2015_us_county.shp

The shapefile has a multipolygon object to represent the boundary of each county. 

The second dataset is the list of Starbucks in US (updated in 2012), which contains address and location information (longitude, latitude). You can download the Starbucks dataset file in CSV format.

0. Setup the database.
     a. Enable the database for spatial support: db2se enable_db sample

     b. Load the counties dataset using the import SQL file: db2 -tf import_counties.sql

     
     c. Create starbucks tables using the SQL file (we create two tables, one for original file, and one for spatial table): db2 -tf createstarbuckstable.sql  
  
     d. Load starbucks dataset using the SQL file:
     First use the commented load script in insertstarbucks.sql to load the file into the original table, then run the script below to insert from the original table into the spatial table. 
     db2 -tf insertstarbucks.sql

     e. Create spatial indexes using the SQL file: db2 -tf createindexes.sql

1. Write a query to find which county has most starbucks stores by using geospatial containment relationship. Please group by "statefp, countyfp, county_name" as county names have duplicates. 
Please return statefp, countyfp, county_name and count of starbucks. 
Hint:
If the query is quite slow, one trick to optimize the query is to give a hint on the selectivity of the index for a spatial predicate. For example:
SELECT ...
FROM   <user_table>
WHERE  ST_Intersects(<indexed_shape_column>, ...) = 1 SELECTIVITY 0.00001;
(More examples on using selectivity for query hint can be found here (https://docs-iias.mybluemix.net/docs/content/SS6NHC/com.ibm.swg.im.dashdb.analytics.doc/doc/analyze_geospatial_data_3.html).)
For the indexes created for the two tables, please try SELECTIVITY as 0.0002. If this doesn't work well, adjust it by yourself. 

2. Write a query to find the nearest starbucks store to Stony Brook University and verify your answer. 
The longitude and latitude location of Stony Brook University is (-73.1233890, 40.9123760). You can find the geolocation of an address here (https://www.latlong.net/). Nearest neighbor search is not directed supported by DB2. You can use ST_BUFFER to create a buffered area (polygon/circle) from a point within a certain distance and search only stores within the buffer. Note that 0.25 degree is roughly 10 miles. For all the datasets, we use spatial reference nad83_srs_1 with srs ID as 1. 

You can find information here (https://www.ibm.com/support/knowledgecenter/en/SSEPGG_11.1.0/com.ibm.db2.luw.spatial.topics.doc/doc/db2sb169.html) on functions such as ST_POINT, ST_BUFFER, ST_WITHIN or ST_CONTAINS, and ST_DISTANCE. 

Please return location and distance in your result. You can use unit 'KILOMETER', 'METER', or 'STATUTE MILE' for distance measurement.

3. Drop all indexes and perform the two queries again, and compare the query performance. (You don't need to turn in your result but discuss your difference of querying time with and without indexes in your README file). 

Homework Submission

Please zip your SQL scripts, results, and a README file. A result can be a text file or a screenshot.  

Please go to blackboard, and submit it under homework 3.
